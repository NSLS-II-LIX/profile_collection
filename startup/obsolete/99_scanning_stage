class scanning_stage():
    
    coarse_x = EpicsMotor('XF:16IDC-ES:InAir{Stg:ScanC-Ax:X}Mtr', name='ss_coarse_y')
    coarse_y = EpicsMotor('XF:16IDC-ES:InAir{Stg:ScanC-Ax:Y}Mtr', name='ss_coarse_x')
    fine_x = EpicsMotor('XF:16IDC-ES:InAir{Stg:ScanF-Ax:X}Mtr', name='ss_fine_y')
    fine_y = EpicsMotor('XF:16IDC-ES:InAir{Stg:ScanC-Ax:Y}Mtr', name='ss_fine_x')
    rotation = EpicsMotor('XF:16IDC-ES:InAir{Stg:ScanF-Ax:Rot}Mtr', name='rotation')
    park_pos1 = 32.5
    park_pos2= 3
    start_pos_x=0
    start_pos_y=0
    sep_y=-9.5
    sep_x=13
    
    RE.md['sample_name'] = current_sample 
    RE.md['saxs'] = ({'saxs_x':saxs.x.position, 'saxs_y':saxs.y.position, 'saxs_z':saxs.z.position})
    RE.md['waxs1'] = ({'waxs1_x':waxs1.x.position, 'waxs1_y':waxs1.y.position, 'waxs1_z':waxs1.z.position})
    RE.md['waxs2'] = ({'waxs2_x':waxs2.x.position, 'waxs1_y':waxs2.y.position, 'waxs1_z':waxs2.z.position}) 
    RE.md['energy'] = ({'mono_bragg': mono.bragg.position, 'energy': getE(), 'gap': get_gap()})
    RE.md['XBPM'] = XBPM_pos() 
    
    def ss_holder(self, tn):
       # '''1 argument accepted: 
       # position 1 to 18 from, 1 on the inboard side
       # position 0 is the washing well '''
        #if tn not in range(0,19) and tn!='park':
        #    raise RuntimeError('invalid tube position %d, must be 0 (drain) or 1-18, or \'park\' !!' % tn)
            
        #if self.ctrl.sv_pcr_tubes.get(as_string=True)!='down':
#            raise RuntimeError('PCR tube holder should be down right now !!')

#        self.tube_pos = tn
        if tn=='park':
            self.coarse_x.move(self.park_pos1)
            self.coarse_y.move(self.park_pos2)
#            print('move to PCR tube holder park position ...')        
        else:
            # these numbers are for the 2016 version tube holder
#            sep_y = 7.15    # these are mechanically determined and should not change
#            sep_x = 10     # these are mechanically determined and should not change
            pos = self.start_pos_y
            if tn>0 and tn < 6:
                self.coarse_x.move(self.start_pos_x)
                pos += (self.start_pos_y + self.sep_y*(tn-1))
                print('move to holder position %d ...' % tn)
                self.coarse_y.move(pos)
            elif tn>5:
                pos2=(self.start_pos_x + self.sep_x)
                self.coarse_x.move(pos2)
                pos += (self.start_pos_y + self.sep_y*(tn-6))
            print('move to holder position %d ...' % tn)
            self.coarse_y.move(pos)
    
ss = scanning_stage()
